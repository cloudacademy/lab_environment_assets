volumes:
    pg_data_volume:

networks:
    web_to_db:
    proxy_to_web:

# Use secrets to configure database connection details.
secrets:
    db_user:
        file: overshare/secrets/db_user.txt
    db_pass:
        file: overshare/secrets/db_pass.txt
    db_name:
        file: overshare/secrets/db_name.txt


# Reusable DB credentials for the postgres and web_app 
x-db_creds: &db_creds
    - source: db_user
      target: /secrets/db_user
      mode: 0440
    - source: db_pass
      target: /secrets/db_pass
      mode: 0440
    - source: db_name
      target: /secrets/db_name
      mode: 0440


services:
    postgres:
        image: postgres:15-alpine
        # arguments for the ENTRYPOINT script. 
        command: "-c shared_buffers=256MB -c max_connections=200"
        restart: unless-stopped
        secrets: *db_creds
        volumes:
            - pg_data_volume:/var/lib/postgresql/data
        networks:
            - web_to_db
        healthcheck:
            test: pg_isready -U "$(cat /secrets/db_user)" -d "$(cat /secrets/db_name)" -h postgres
            interval: 3s
            retries: 5

        environment:
            - POSTGRES_USER_FILE=/secrets/db_user
            - POSTGRES_PASSWORD_FILE=/secrets/db_pass
            - POSTGRES_DB_FILE=/secrets/db_name


    db_init:
        build: overshare/web_app/
        command: python3 /code/app.py
        restart: "no"
        secrets: *db_creds
        networks:
            - web_to_db
        environment:
            - DATABASE_USER=/secrets/db_user
            - DATABASE_PASS=/secrets/db_pass
            - DATABASE_NAME=/secrets/db_name
            - DATABASE_HOST=postgres
        depends_on:
            postgres:
                condition: service_healthy

    web_app: 
        build:
            context: overshare/web_app/
        restart: unless-stopped
        secrets: *db_creds
        networks:
            - web_to_db
            - proxy_to_web
        healthcheck:
            test: wget -T 5 "http://web_app:9000/" -O /dev/null -q
            interval: 3s
            retries: 5
            start_period: 15s
        environment:
            - DATABASE_USER=/secrets/db_user
            - DATABASE_PASS=/secrets/db_pass
            - DATABASE_NAME=/secrets/db_name
            - DATABASE_HOST=postgres

        depends_on:
            postgres:
                condition: service_healthy



    proxy:
        image: nginx:1.27-alpine
        restart: unless-stopped
        ports:
            - "5000:80"
        volumes:
            - /home/ec2-user/challenge_3/overshare/web_proxy/default.conf.template:/etc/nginx/templates/default.conf.template
        networks:
            - proxy_to_web
        environment:
            - WEB_APP_HOST=web_app
            - WEB_APP_PORT=9000
        depends_on: 
            web_app:
                condition: service_healthy